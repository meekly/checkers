* Сюда будем записывать то, что нам нужно реализовать, а также ход
  реализации проекта. Будет довольно много всего, я полагаю.

1) Реализовать обмен сообщениями об игре с помощью сокетов.
   
   Файл game_view.php.

   Нужен сокет, который считывает всех пользователей
   Сообщение для сокета будет: get-all-users
   Ожидается ответ в виде строки: логин_пользователя,имя,айди;логин_другого,имя,айди...
   При нажатии на строку появляется кнопка: пригласить в игру

   Создаётся игра - посылается запрос на сервер: invite
   Если принимается запрос с сервера invite, возникает окошко, предлагающее присоединиться к игре
   Если пользователь соглашается, посылается запрос: invite-accept
   Если не соглашается, посылается: invite-deny
   Сервер либо перенаправляет пользователя, либо присылает ему: invite-deny,
   	  по которому просто выводится окно с отказом от пользователя.
	  
2) Для каждого пользователя реализовать поддержку информации о том,
   что он делает в данный момент: играет или скучает. То есть когда
   пользователь меняет своё занятие, то отправляет всем об этом сообщение.

3) Итерфейс взаимодействия клиента с сервером. Относительно клиента!

   Исходящие сообщения:
   - connect - первое сообщение после подключения, отправляем свой ид и имя пользователя на сервер   (connect&user_id&user_name)
   - invite - приглашаем пользователя по его id (invite&user_id)
   - invite-accept - подтверждаем полученное приглашение, ходим первыми (invete-accept&user_id)
   - invite-deny - отклоняем полученное приглашение (invite-deny&user_id)
   - turn - делаем ход (turn&x1&y1&x2&y2)
   - message - отправляем сообщение в чат пользователю с которым сейчас идет игра (message&text)
   - game-over - оповещаем сервер что игра закончилась (game-over&lose или game-over&win)

   Входящие сообщения:
   - invite&user_id - запрос на совместную игру от пользователя user_id
   - invite-accept&user_id - сообщаем, что запрос на игру был принят пользователем, ходим вторыми
   - turn&x1&y1&x2&y2 - сообщаем, что противник сделал ход
   - busy&user_id&user_name - сообщаем, что пользователь user_id находится в другой игре (ему нельзя отправить приглашение) (user_name не обязательный параметр)
   - online&user_id&user_name - сообщаем, что есть пользователь user_id, он доступен для игры
   - offline&user_id - сообщаем, что пользователь user_id вышел из игры   
   - opponent-surrender - сообщаем, что противник сдался, мы победили

   Примеры:
   Если подключился новый игрок, и онлайн на данный момент 10 игроков, из которых 4 в игре, то он получит 6 сообщений online и 4 busy.
   Если через какое-то время завершится одна из игр, то он получит два сообщения online (для двух игроков в игре), ему нужно будет
   отобразить что эти игроки доступны для игры.

   Предложения:  
   Можно добавить кнопку с предварительным завершением игры, при этом отправляется серверу сообщение game-over&surrender.
   Можно сделать общий чат. Тогда отправляем серверу сообщение message-all&text

   Замечания:
   Не пользователь отправляет сообщение о том что он поменял занятие, а сервер это мониторит. И сообщает изменения всем пользователям.
   Только зарегестрированые пользователи могут играть онлайн. Если вход не выполнен нужно выводить окно, 
   с предложением зайти или зарегестрироваться.